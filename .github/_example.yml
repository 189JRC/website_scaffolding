name: Deploy to Linode

on:
  push:
    branches:
      - main

env:
  # Use the same ssh-agent socket value across all jobs
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # commented out while debugging
    # - name: Install expect
    #   run: sudo apt-get update && sudo apt-get install -y expect

    - name: Set up SSH
      run: |
        # Start the SSH agent
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        
        # Create the askpass script
        echo "echo ${{ secrets.LINODE_SSH_KEY_PASSPHRASE }}" > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
        
        # Add the private key to the agent using the askpass script
        echo "${{ secrets.LINODE_SSH_KEY }}" | tr -d '\r' > keyfile
        chmod 600 keyfile
        DISPLAY=:0 SSH_ASKPASS=~/.ssh_askpass ssh-add keyfile > /dev/null
        
        # Create .ssh directory
        mkdir -p ~/.ssh
        
        # Add known hosts to avoid SSH prompts
        ssh-keyscan -H 213.52.129.217 >> ~/.ssh/known_hosts

    - name: test copy files to remote server
      run: scp -o StrictHostKeyChecking=no ./test.txt root@213.52.129.217:/root

    - name: Copy files to remote server
      run: scp -o StrictHostKeyChecking=no -r ./* root@213.52.129.217:/root/production_dir

    - name: Create and activate virtual environment on remote server
      run: |
        ssh -o StrictHostKeyChecking=no root@213.52.129.217 << 'EOF'
          cd /root/production_dir
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r backend/requirements.txt
        EOF

    - name: Create .env file and perform Docker cleanup on remote server
      run: |
        ssh -o StrictHostKeyChecking=no root@213.52.129.217 << 'EOF'
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > /root/production_dir/backend/.env

          # Stop and remove all containers
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)

          # Remove all images
          docker rmi $(docker images -a -q)

          # Remove all volumes
          docker volume rm $(docker volume ls -q)
        EOF


    - name: SSH and deploy
      run: |
        ssh -o StrictHostKeyChecking=no root@213.52.129.217 << 'EOF'
          echo "SSH AND DEPLOY"
          cd /root/production_dir
          source venv/bin/activate
          docker-compose down
          docker-compose up --build -d
        EOF
    
    - name: Remove .env file from remote server
      run: |
        ssh -o StrictHostKeyChecking=no root@213.52.129.217 << 'EOF'
          rm -f /root/production_dir/backend/.env
        EOF
